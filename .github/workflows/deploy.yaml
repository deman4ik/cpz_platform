name: CD

on:
  push:
    branches: [k8s]

jobs:
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Update SHA
        run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/_meta

      - name: Build container image
        run: docker build --build-arg GITHUB_SSH_KEY="${{ secrets.GITHUB_SSH_KEY }}" -t registry.digitalocean.com/cpz/cpz-platform:$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2-experiment
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig show cpz-cluster > $GITHUB_WORKSPACE/.kubeconfig

      - name: Login to Docker
        run: doctl registry login

      - name: Push image to Docker Hub
        run: docker push registry.digitalocean.com/cpz/cpz-platform

      - name: Update deployment file IMAGE and TAG
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/cpz/cpz-platform:'${TAG}'|' $GITHUB_WORKSPACE/deployment.yaml

      - name: Update deployment file APP dev
        if: contains(github.ref, 'k8s')
        run: sed -i 's|<APP>|cpz-platform-dev|' $GITHUB_WORKSPACE/deployment.yaml

      - name: Update deployment file APP prod
        if: contains(github.ref, 'master')
        run: sed -i 's|<APP>|cpz-platform|' $GITHUB_WORKSPACE/deployment.yaml

      - name: Update deployment file ENV dev
        if: contains(github.ref, 'k8s')
        run: sed -i 's|<ENV>|dev|' $GITHUB_WORKSPACE/deployment.yaml

      - name: Update deployment file ENV prod
        if: contains(github.ref, 'master')
        run: sed -i 's|<ENV>|prod|' $GITHUB_WORKSPACE/deployment.yaml

      - name: Deploy deployment to DigitalOcean Kubernetes
        run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/deployment.yaml

      - name: Verify deployment dev
        if: contains(github.ref, 'k8s')
        run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status deployment/cpz-platform-dev

      - name: Verify deployment prod
        if: contains(github.ref, 'master')
        run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status deployment/cpz-platform
