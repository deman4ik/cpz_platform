import { MARKETWATCHER_SERVICE } from "cpz/config/services";
import {
  CANDLES_TOPIC,
  ERROR_TOPIC,
  LOG_TOPIC,
  SIGNALS_TOPIC,
  TASKS_TOPIC,
  TICKS_TOPIC,
  TRADES_TOPIC
} from "cpz/events/topics";
import {
  BASE_EVENT,
  SUB_DELETED_EVENT,
  SUB_VALIDATION_EVENT
} from "cpz/events/types/base";

import schemas from "cpz/events/schemas";
import {
  ERROR_MARKETWATCHER_EVENT,
  LOG_MARKETWATCHER_EVENT,
  TASKS_MARKETWATCHER_START_EVENT,
  TASKS_MARKETWATCHER_STARTED_EVENT,
  TASKS_MARKETWATCHER_STOP_EVENT,
  TASKS_MARKETWATCHER_STOPPED_EVENT,
  TASKS_MARKETWATCHER_SUBSCRIBE_EVENT,
  TASKS_MARKETWATCHER_UNSUBSCRIBE_EVENT,
  TASKS_MARKETWATCHER_UPDATED_EVENT,
  TICKS_NEWTICK_EVENT
} from "cpz/config/events/types";

export default {
  serviceName: MARKETWATCHER_SERVICE,
  events: {
    topics: {
      TASKS_TOPIC,
      CANDLES_TOPIC,
      TICKS_TOPIC,
      SIGNALS_TOPIC,
      TRADES_TOPIC,
      LOG_TOPIC,
      ERROR_TOPIC
    },
    types: {
      BASE_EVENT,
      SUB_VALIDATION_EVENT,
      SUB_DELETED_EVENT,
      TASKS_MARKETWATCHER_START_EVENT,
      TASKS_MARKETWATCHER_STOP_EVENT,
      TASKS_MARKETWATCHER_SUBSCRIBE_EVENT,
      TASKS_MARKETWATCHER_UNSUBSCRIBE_EVENT,
      TASKS_MARKETWATCHER_STARTED_EVENT,
      TASKS_MARKETWATCHER_UPDATED_EVENT,
      TASKS_MARKETWATCHER_STOPPED_EVENT,
      LOG_MARKETWATCHER_EVENT,
      TICKS_NEWTICK_EVENT,
      ERROR_MARKETWATCHER_EVENT
    },
    schemas: {
      [BASE_EVENT]: schemas[BASE_EVENT],
      [SUB_VALIDATION_EVENT]: schemas[SUB_VALIDATION_EVENT],
      [SUB_DELETED_EVENT]: schemas[SUB_DELETED_EVENT],
      [TASKS_MARKETWATCHER_START_EVENT]:
        schemas[TASKS_MARKETWATCHER_START_EVENT],
      [TASKS_MARKETWATCHER_STOP_EVENT]: schemas[TASKS_MARKETWATCHER_STOP_EVENT],
      [TASKS_MARKETWATCHER_SUBSCRIBE_EVENT]:
        schemas[TASKS_MARKETWATCHER_SUBSCRIBE_EVENT],
      [TASKS_MARKETWATCHER_UNSUBSCRIBE_EVENT]:
        schemas[TASKS_MARKETWATCHER_UNSUBSCRIBE_EVENT],
      [LOG_MARKETWATCHER_EVENT]: schemas[LOG_MARKETWATCHER_EVENT],
      [TICKS_NEWTICK_EVENT]: schemas[TICKS_NEWTICK_EVENT],
      [ERROR_MARKETWATCHER_EVENT]: schemas[ERROR_MARKETWATCHER_EVENT],
      [TASKS_MARKETWATCHER_STARTED_EVENT]:
        schemas[TASKS_MARKETWATCHER_STARTED_EVENT],
      [TASKS_MARKETWATCHER_UPDATED_EVENT]:
        schemas[TASKS_MARKETWATCHER_UPDATED_EVENT],
      [TASKS_MARKETWATCHER_STOPPED_EVENT]:
        schemas[TASKS_MARKETWATCHER_STOPPED_EVENT]
    }
  }
};
