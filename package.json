{
  "name": "cpz_platform",
  "version": "1.0.0",
  "description": "Cryptuoso Cryptocurrency Trading Platform",
  "scripts": {
    "build": "tsc",
    "dev": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/*.service.ts services/**/*.service.ts services/**/**/*.service.ts",
    "importer": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/importer/importer-runner.service.ts services/importer/importer-worker.service.ts services/connector/public-connector.service.ts services/db/candles/*.service.ts services/db/db-importers.service.ts services/api.service.ts services/auth.service.ts services/db/user/*.service.ts",
    "db": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/db/**/*.service.ts services/db/*.service.ts",
    "connector": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/connector/*.service.ts",
    "backtester": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/backtester/*.service.ts services/db/**/*.service.ts services/db/*.service.ts services/api.service.ts services/auth.service.ts",
    "robot": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/robot/*.service.ts",
    "tg": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/api.service.ts services/auth.service.ts services/db/user/*.service.ts services/db/robot/*.service.ts services/db/db-markets.service.ts services/connector/*.service.ts services/userRobot/*.service.ts services/exwatcher.service.ts services/db/db-connector-jobs.service.ts services/telegram/*.service.ts",
    "auth": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/api.service.ts services/auth.service.ts services/db/**/*.service.ts services/db/*.service.ts services/mail.service.ts services/connector/public-connector.service.ts services/connector/private-connector-worker.service.ts",
    "mail": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/mail.service.ts",
    "worker": "node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config dist/local.config.js dist/services/job-runner.service.js",
    "exwatcher": "node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config dist/local.config.js dist/services/importer/importer-runner.service.js dist/services/importer/importer-worker.service.js dist/services/exwatcher/exwatcher-runner.service.js dist/services/exwatcher/kraken-watcher.service.js dist/services/connector/public-connector.service.js dist/services/db/*.service.js dist/services/db/candles/*.service.js",
    "markets": "ts-node ./node_modules/moleculer/bin/moleculer-runner.js --hot --repl --env --config local.config.ts services/db/db-markets.service.ts services/connector/public-connector.service.ts",
    "cli": "moleculer connect",
    "start": "node ./node_modules/moleculer/bin/moleculer-runner --env --config dist/local.config.js dist/services",
    "startPM": "pm2 start pm.prod.config.js",
    "stopPM": "pm2 stop pm.prod.config.js",
    "startPMD": "pm2 start pm.dev.config.js",
    "stopPMD": "pm2 stop pm.dev.config.js",
    "startPMI": "pm2 start pm.imp.config.js",
    "ci": "jest --watch",
    "test": "jest --coverage",
    "lint": "tslint -p tsconfig.json",
    "dc:up": "docker-compose up --build -d",
    "dc:down": "docker-compose down"
  },
  "keywords": [
    "cryptuoso",
    "cryptucurrency",
    "trading",
    "bitcoin"
  ],
  "author": "Dmitry Shatalov (@deman4ik)",
  "devDependencies": {
    "@types/async-retry": "^1.4.1",
    "@types/bcrypt": "^3.0.0",
    "@types/bluebird": "^3.5.30",
    "@types/bull": "^3.12.2",
    "@types/dotenv": "^8.2.0",
    "@types/graphql-iso-date": "^3.3.3",
    "@types/graphql-type-json": "^0.3.2",
    "@types/jest": "^25.2.1",
    "@types/jsonwebtoken": "^8.3.9",
    "@types/node": "^13.13.2",
    "@types/node-cron": "^2.0.3",
    "@types/node-fetch": "^2.5.6",
    "@types/redlock": "^4.0.1",
    "@types/require-from-string": "^1.2.0",
    "@types/socket.io-client": "^1.4.32",
    "@types/uuid": "^7.0.2",
    "@types/validator": "^12.0.1",
    "@types/websocket": "^1.0.0",
    "jest": "^25.4.0",
    "jest-cli": "^25.4.0",
    "mockdate": "^2.0.5",
    "moleculer-repl": "^0.6.4",
    "ts-jest": "^25.4.0",
    "ts-node": "^8.9.0",
    "tslint": "^6.1.1",
    "tslint-config-airbnb-base": "^0.3.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.3.0",
    "typescript": "^3.8.3"
  },
  "dependencies": {
    "async-retry": "^1.3.1",
    "bcrypt": "^4.0.1",
    "ccxt": "^1.26.75",
    "ccxt.pro": "github:kroitor/ccxt.pro",
    "cookies": "^0.8.0",
    "dayjs": "^1.8.25",
    "dotenv": "^8.2.0",
    "fastest-validator": "^1.2.0",
    "graphql": "^14.6.0",
    "graphql-iso-date": "^3.6.1",
    "graphql-type-json": "^0.3.1",
    "https-proxy-agent": "^5.0.0",
    "ioredis": "^4.16.3",
    "ioredis-lock": "^4.0.0",
    "jsonwebtoken": "^8.5.1",
    "logdna-winston": "^2.3.1",
    "mailgun-js": "^0.22.0",
    "moleculer": "^0.14.6",
    "moleculer-apollo-server": "^0.2.2",
    "moleculer-bull": "^0.2.5",
    "moleculer-db": "^0.8.7",
    "moleculer-db-adapter-sequelize": "^0.2.6",
    "moleculer-web": "^0.9.1",
    "nats": "^1.4.8",
    "node-cron": "^2.0.3",
    "node-fetch": "^2.6.0",
    "pg": "^7.18.2",
    "pg-hstore": "^2.3.3",
    "redlock": "^4.1.0",
    "require-from-string": "^2.0.2",
    "sequelize": "^5.21.6",
    "telegraf": "^3.37.0",
    "telegraf-i18n": "^6.6.0",
    "telegraf-session-redis": "^5.1.0",
    "threads": "^1.4.0",
    "tulind": "^0.8.18",
    "uuid": "^7.0.3",
    "winston": "^3.2.1"
  },
  "engines": {
    "node": ">= 10.x.x"
  },
  "jest": {
    "coverageDirectory": "<rootDir>/coverage",
    "testEnvironment": "node",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ],
    "transform": {
      "^.+\\.(ts|tsx)$": "ts-jest"
    },
    "testMatch": [
      "**/*.spec.(ts)"
    ],
    "globals": {
      "ts-jest": {
        "tsConfig": "tsconfig.json"
      }
    }
  }
}
