const ADVISER_RUNNER_ERROR = "AdviserRunnerError";
const TRADER_RUNNER_ERROR = "TraderRunnerError";
const USER_ROBOT_RUNNER_ERROR = "UserRobotRunnerError";
const BACKTESTER_RUNNER_ERROR = "BacktesterRunnerError";
const BACKTEST_RUNNER_ERROR = "BacktestRunnerError";
const IMPORTER_RUNNER_ERROR = "ImporterRunnerError";
const MARKETWATCHER_RUNNER_ERROR = "MarketwatcherRunnerError";
const CANDLEBATCHER_RUNNER_ERROR = "CandlebatcherRunnerError";
const EX_WATCHER_RUNNER_ERROR = "ExWatcherRunnerError";
const EX_WATCHER_NOT_FOUND_ERROR = "ExWatcherNotFound";
const EX_WATCHER_ERROR = "ExWatcherError";
const USER_ROBOT_NOT_FOUND_ERROR = "UserRobotNotFound";
const BACKTEST_NOT_FOUND_ERROR = "BacktestNotFound";
const CONTROL_API_ERROR = "ControlApiError";
const CONTROL_ERROR = "ControlError";
const CONTROL_EVENT_PUBLISH_ERROR = "ControlEventPublishError";
const CONTROL_EVENTS_PUBLISH_ERROR = "ControlEventsPublishError";
const CONTROL_TASK_RUNNER_ERROR = "ControlTaskRunnerError";
const CONTROL_HANDLE_EVENT_ERROR = "ControlHandleEventError";
const CONTROL_DELETE_STATE_ERROR = "ControlDeleteStateError";
export {
  ADVISER_RUNNER_ERROR,
  BACKTESTER_RUNNER_ERROR,
  BACKTEST_RUNNER_ERROR,
  TRADER_RUNNER_ERROR,
  USER_ROBOT_RUNNER_ERROR,
  IMPORTER_RUNNER_ERROR,
  MARKETWATCHER_RUNNER_ERROR,
  CANDLEBATCHER_RUNNER_ERROR,
  CONTROL_API_ERROR,
  CONTROL_ERROR,
  CONTROL_EVENT_PUBLISH_ERROR,
  CONTROL_EVENTS_PUBLISH_ERROR,
  EX_WATCHER_RUNNER_ERROR,
  CONTROL_TASK_RUNNER_ERROR,
  CONTROL_HANDLE_EVENT_ERROR,
  CONTROL_DELETE_STATE_ERROR,
  EX_WATCHER_NOT_FOUND_ERROR,
  EX_WATCHER_ERROR,
  USER_ROBOT_NOT_FOUND_ERROR,
  BACKTEST_NOT_FOUND_ERROR
};
