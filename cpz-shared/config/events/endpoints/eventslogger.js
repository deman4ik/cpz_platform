import { EVENTS_LOGGER_SERVICE } from "../../services";
import {
  TASKS_TOPIC,
  CANDLES_TOPIC,
  SIGNALS_TOPIC,
  TICKS_TOPIC,
  TRADES_TOPIC,
  LOG_TOPIC,
  ERROR_TOPIC
} from "./topics";
import {
  TASKS_ADVISER_START_EVENT,
  TASKS_ADVISER_STOP_EVENT,
  TASKS_ADVISER_UPDATE_EVENT,
  TASKS_ADVISER_STARTED_EVENT,
  TASKS_ADVISER_STOPPED_EVENT,
  TASKS_ADVISER_UPDATED_EVENT
} from "../types/tasks/adviser";
import {
  TASKS_BACKTESTER_START_EVENT,
  TASKS_BACKTESTER_STOP_EVENT,
  TASKS_BACKTESTER_STARTED_EVENT,
  TASKS_BACKTESTER_STOPPED_EVENT,
  TASKS_BACKTESTER_FINISHED_EVENT
} from "../types/tasks/backtester";
import {
  TASKS_CANDLEBATCHER_START_EVENT,
  TASKS_CANDLEBATCHER_STOP_EVENT,
  TASKS_CANDLEBATCHER_UPDATE_EVENT,
  TASKS_CANDLEBATCHER_STARTED_EVENT,
  TASKS_CANDLEBATCHER_STOPPED_EVENT,
  TASKS_CANDLEBATCHER_UPDATED_EVENT
} from "../types/tasks/candlebatcher";
import {
  TASKS_IMPORTER_START_EVENT,
  TASKS_IMPORTER_STOP_EVENT,
  TASKS_IMPORTER_STARTED_EVENT,
  TASKS_IMPORTER_STOPPED_EVENT,
  TASKS_IMPORTER_FINISHED_EVENT
} from "../types/tasks/importer";
import {
  TASKS_MARKETWATCHER_START_EVENT,
  TASKS_MARKETWATCHER_STOP_EVENT,
  TASKS_MARKETWATCHER_SUBSCRIBE_EVENT,
  TASKS_MARKETWATCHER_UNSUBSCRIBE_EVENT,
  TASKS_MARKETWATCHER_STARTED_EVENT,
  TASKS_MARKETWATCHER_STOPPED_EVENT,
  TASKS_MARKETWATCHER_UPDATED_EVENT
} from "../types/tasks/marketwatcher";
import {
  TASKS_TRADER_START_EVENT,
  TASKS_TRADER_STOP_EVENT,
  TASKS_TRADER_UPDATE_EVENT,
  TASKS_TRADER_STARTED_EVENT,
  TASKS_TRADER_STOPPED_EVENT,
  TASKS_TRADER_UPDATED_EVENT
} from "../types/tasks/trader";
import {
  TASKS_BACKTEST_STARTED_EVENT,
  TASKS_BACKTEST_STOPPED_EVENT,
  TASKS_BACKTEST_FINISHED_EVENT
} from "../types/tasks/backtest";
import {
  TASKS_EXWATCHER_STARTED_EVENT,
  TASKS_EXWATCHER_STOPPED_EVENT
} from "../types/tasks/exwatcher";
import {
  TASKS_USERROBOT_STARTED_EVENT,
  TASKS_USERROBOT_STOPPED_EVENT,
  TASKS_USERROBOT_UPDATED_EVENT
} from "../types/tasks/userRobot";
import {
  CANDLES_NEWCANDLE_EVENT,
  CANDLES_HANDLED_EVENT
} from "../types/candles/candles";
import {
  SIGNALS_NEWSIGNAL_EVENT,
  SIGNALS_HANDLED_EVENT
} from "../types/signals/signals";
import { TICKS_NEWTICK_EVENT, TICKS_HANDLED_EVENT } from "../types/ticks/ticks";
import {
  TRADES_POSITION_EVENT,
  TRADES_ORDER_EVENT
} from "../types/trades/trades";
import {
  LOG_ADVISER_EVENT,
  LOG_BACKTESTER_EVENT,
  LOG_BACKTEST_EVENT,
  LOG_CANDLEBATCHER_EVENT,
  LOG_CONTROL_EVENT,
  LOG_EXWATCHER_EVENT,
  LOG_IMPORTER_EVENT,
  LOG_MARKETWATCHER_EVENT,
  LOG_TRADER_EVENT,
  LOG_USERROBOT_EVENT
} from "../types/log/log";
import {
  ERROR_ADVISER_EVENT,
  ERROR_BACKTESTER_EVENT,
  ERROR_BACKTEST_EVENT,
  ERROR_CANDLEBATCHER_EVENT,
  ERROR_CONTROL_EVENT,
  ERROR_EXWATCHER_EVENT,
  ERROR_IMPORTER_EVENT,
  ERROR_MARKETWATCHER_EVENT,
  ERROR_TRADER_EVENT,
  ERROR_USERROBOT_EVENT
} from "../types/error/error";

export default {
  endpoint: [
    {
      name: `${EVENTS_LOGGER_SERVICE}-${TASKS_TOPIC}`,
      topic: TASKS_TOPIC,
      url: "/api/events",
      types: [
        TASKS_ADVISER_START_EVENT.eventType,
        TASKS_ADVISER_STOP_EVENT.eventType,
        TASKS_ADVISER_UPDATE_EVENT.eventType,
        TASKS_ADVISER_STARTED_EVENT.eventType,
        TASKS_ADVISER_STOPPED_EVENT.eventType,
        TASKS_ADVISER_UPDATED_EVENT.eventType,
        TASKS_BACKTESTER_START_EVENT.eventType,
        TASKS_BACKTESTER_STOP_EVENT.eventType,
        TASKS_BACKTESTER_STARTED_EVENT.eventType,
        TASKS_BACKTESTER_STOPPED_EVENT.eventType,
        TASKS_BACKTESTER_FINISHED_EVENT.eventType,
        TASKS_CANDLEBATCHER_START_EVENT.eventType,
        TASKS_CANDLEBATCHER_STOP_EVENT.eventType,
        TASKS_CANDLEBATCHER_UPDATE_EVENT.eventType,
        TASKS_CANDLEBATCHER_STARTED_EVENT.eventType,
        TASKS_CANDLEBATCHER_STOPPED_EVENT.eventType,
        TASKS_CANDLEBATCHER_UPDATED_EVENT.eventType,
        TASKS_IMPORTER_START_EVENT.eventType,
        TASKS_IMPORTER_STOP_EVENT.eventType,
        TASKS_IMPORTER_STARTED_EVENT.eventType,
        TASKS_IMPORTER_STOPPED_EVENT.eventType,
        TASKS_IMPORTER_FINISHED_EVENT.eventType,
        TASKS_MARKETWATCHER_START_EVENT.eventType,
        TASKS_MARKETWATCHER_STOP_EVENT.eventType,
        TASKS_MARKETWATCHER_SUBSCRIBE_EVENT.eventType,
        TASKS_MARKETWATCHER_UNSUBSCRIBE_EVENT.eventType,
        TASKS_MARKETWATCHER_STARTED_EVENT.eventType,
        TASKS_MARKETWATCHER_STOPPED_EVENT.eventType,
        TASKS_MARKETWATCHER_UPDATED_EVENT.eventType,
        TASKS_TRADER_START_EVENT.eventType,
        TASKS_TRADER_STOP_EVENT.eventType,
        TASKS_TRADER_UPDATE_EVENT.eventType,
        TASKS_TRADER_STARTED_EVENT.eventType,
        TASKS_TRADER_STOPPED_EVENT.eventType,
        TASKS_TRADER_UPDATED_EVENT.eventType,
        TASKS_BACKTEST_STARTED_EVENT.eventType,
        TASKS_BACKTEST_STOPPED_EVENT.eventType,
        TASKS_BACKTEST_FINISHED_EVENT.eventType,
        TASKS_EXWATCHER_STARTED_EVENT.eventType,
        TASKS_EXWATCHER_STOPPED_EVENT.eventType,
        TASKS_USERROBOT_STARTED_EVENT.eventType,
        TASKS_USERROBOT_STOPPED_EVENT.eventType,
        TASKS_USERROBOT_UPDATED_EVENT.eventType
      ]
    },
    {
      name: `${EVENTS_LOGGER_SERVICE}-${CANDLES_TOPIC}`,
      topic: CANDLES_TOPIC,
      url: "/api/events",
      types: [
        CANDLES_NEWCANDLE_EVENT.eventType,
        CANDLES_HANDLED_EVENT.eventType
      ]
    },
    {
      name: `${EVENTS_LOGGER_SERVICE}-${SIGNALS_TOPIC}`,
      topic: SIGNALS_TOPIC,
      url: "/api/events",
      types: [
        SIGNALS_NEWSIGNAL_EVENT.eventType,
        SIGNALS_HANDLED_EVENT.eventType
      ]
    },
    {
      name: `${EVENTS_LOGGER_SERVICE}-${TICKS_TOPIC}`,
      topic: TICKS_TOPIC,
      url: "/api/events",
      types: [TICKS_NEWTICK_EVENT.eventType, TICKS_HANDLED_EVENT.eventType]
    },
    {
      name: `${EVENTS_LOGGER_SERVICE}-${TRADES_TOPIC}`,
      topic: TRADES_TOPIC,
      url: "/api/events",
      types: [TRADES_POSITION_EVENT.eventType, TRADES_ORDER_EVENT.eventType]
    },
    {
      name: `${EVENTS_LOGGER_SERVICE}-${LOG_TOPIC}`,
      topic: LOG_TOPIC,
      url: "/api/events",
      types: [
        LOG_ADVISER_EVENT.eventType,
        LOG_BACKTESTER_EVENT.eventType,
        LOG_BACKTEST_EVENT.eventType,
        LOG_CANDLEBATCHER_EVENT.eventType,
        LOG_CONTROL_EVENT.eventType,
        LOG_EXWATCHER_EVENT.eventType,
        LOG_IMPORTER_EVENT.eventType,
        LOG_MARKETWATCHER_EVENT.eventType,
        LOG_TRADER_EVENT.eventType,
        LOG_USERROBOT_EVENT.eventType
      ]
    },
    {
      name: `${EVENTS_LOGGER_SERVICE}-${ERROR_TOPIC}`,
      topic: ERROR_TOPIC,
      url: "/api/events",
      types: [
        ERROR_ADVISER_EVENT.eventType,
        ERROR_BACKTESTER_EVENT.eventType,
        ERROR_BACKTEST_EVENT.eventType,
        ERROR_CANDLEBATCHER_EVENT.eventType,
        ERROR_CONTROL_EVENT.eventType,
        ERROR_EXWATCHER_EVENT.eventType,
        ERROR_IMPORTER_EVENT.eventType,
        ERROR_MARKETWATCHER_EVENT.eventType,
        ERROR_TRADER_EVENT.eventType,
        ERROR_USERROBOT_EVENT.eventType
      ]
    }
  ]
};
